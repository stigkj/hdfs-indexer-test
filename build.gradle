apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenCentral()
    mavenRepo urls: "http://guice-maven.googlecode.com/svn/trunk"
    mavenRepo urls: "http://repository.codehaus.org"

}

dependencies {
    compile "org.apache.hadoop:hadoop-core:0.20.2"
    compile('hdfs-indexer:hdfs-indexer:0.0.2') {
        artifact {
            name = 'hdfs-indexer'
            extension = 'jar'
            url = 'http://dl.dropbox.com/u/456244/hdfs-indexer-0.0.2.jar'
            type = "jar"
        }
    }
}

//************* java plugin configuration ********************
sourceCompatibility = 1.6
version = '0.0.1'
jar {
    // include all dependency jars in this jars lib/ folder
    from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }

    manifest {
        // attributes("Main-Class": "com.freshbourne.hdfs.index.test.Main")
    }
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			}
		}
}

//************* OWN TASKS ********************

task runJar(dependsOn: jar) << {
    run("scripts/run.sh")
}
runJar.description = 'trys to run the jar in Hadoop'

task clearCache() << {
    run("rm -rf " + System.getenv()["HOME"] + "/.gradle/cache/hdfs-indexer")
}

//************* HELPER METHODS ********************

// run a command with direct process output
def run(command) {
    def process = command.execute()
    process.consumeProcessOutput(System.out, System.err)
    process.waitForOrKill(0)
    return process // use to get exit code et cetera
}
